<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>MoMA Scan Results</title>
<link rel="stylesheet" type="text/css" href="Media/moma.css" />
<script type="text/ecmascript" src="Media/moma.js"></script>
</head>
<body>
    <div class='header'>
        <div class='headertext'>MoMA Scan Results</div>
    </div>
    <div class='wrapper'>
    <div class='legend'>
      <div>
        Scan Date: 9/4/2013 9:00:41 AM<br/>
        MoMA Definitions: Mono 2.8 (4.0 Profile)<br/><br/>
        For descriptions of issues, see <a href='http://www.mono-project.com/MoMA_-_Issue_Descriptions'>MoMA Issue Descriptions</a>.
      </div>
    </div>
    <table class='results-table'>
      <thead>
        <tr>
          <th scope='col'></th>
          <th scope='col'></th>
          <th scope='col'>Assembly</th>
          <th scope='col'>Version</th>
          <th scope='col'>Missing</th>
          <th scope='col'>Not Implemented</th>
          <th scope='col'>Todo</th>
          <th scope='col'>P/Invoke</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style='width: 10px'></td>
          <td style='width: 16px'><img src='Media/pass.png' /></td>
          <td>AutoMapper.dll</td>
          <td>3.0.0.0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr class='errorrow' onclick='toggle("el2", "img2")'>
          <td style='width: 10px'><img id='img2' src='Media/plus.png' /></td>
          <td style='width: 16px'><img src='Media/fail.png' /></td>
          <td>AutoMapper.Net4.dll</td>
          <td>0.0.0.0</td>
          <td>0</td>
          <td>0</td>
          <td>7</td>
          <td>0</td>
        </tr>
        <tr id='el2' class='errorlist' style='display: none'>
          <td></td>
          <td colspan='7'>
            <table cellpadding='2' cellspacing='0' width='100%' class='inner-results'>
              <tr class='inner-header'>
              <td>Calling Method</td>
              <td>Method with [MonoTodo]</td>
              <td>Reason</td>
              </tr>
              <tr>
              <td>Type CreateProxyType (Type)</td>
              <td>bool Type.op_Inequality (Type, Type)</td>
              <td>Implement it properly once 4.0 impl details are known.</td>
              </tr>
              <tr>
              <td>Type GetProxyType (Type)</td>
              <td>bool Type.op_Equality (Type, Type)</td>
              <td>Implement it properly once 4.0 impl details are known.</td>
              </tr>
              <tr>
              <td>bool <CreateProxyType>b__1 (Type)</td>
              <td>bool Type.op_Inequality (Type, Type)</td>
              <td>Implement it properly once 4.0 impl details are known.</td>
              </tr>
              <tr>
              <td>bool IsSetType (Type)</td>
              <td>bool Type.op_Equality (Type, Type)</td>
              <td>Implement it properly once 4.0 impl details are known.</td>
              </tr>
              <tr>
              <td>bool <IsSetType>b__2 (Type)</td>
              <td>bool Type.op_Equality (Type, Type)</td>
              <td>Implement it properly once 4.0 impl details are known.</td>
              </tr>
              <tr>
              <td>bool IsMatch (ResolutionContext)</td>
              <td>bool Type.op_Equality (Type, Type)</td>
              <td>Implement it properly once 4.0 impl details are known.</td>
              </tr>
              <tr>
              <td>bool IsMatch (ResolutionContext)</td>
              <td>bool Type.op_Equality (Type, Type)</td>
              <td>Implement it properly once 4.0 impl details are known.</td>
              </tr>
            </table>
          </td>
        </tr>
        <tr class='errorrow' onclick='toggle("el3", "img3")'>
          <td style='width: 10px'><img id='img3' src='Media/plus.png' /></td>
          <td style='width: 16px'><img src='Media/fail.png' /></td>
          <td>CookComputing.XmlRpcV2.dll</td>
          <td>2.5.0.0</td>
          <td>0</td>
          <td>0</td>
          <td>8</td>
          <td>0</td>
        </tr>
        <tr id='el3' class='errorlist' style='display: none'>
          <td></td>
          <td colspan='7'>
            <table cellpadding='2' cellspacing='0' width='100%' class='inner-results'>
              <tr class='inner-header'>
              <td>Calling Method</td>
              <td>Method with [MonoTodo]</td>
              <td>Reason</td>
              </tr>
              <tr>
              <td>void BuildStandardMethod (CodeTypeDeclaration, string, string, Type[], String[], Type, Type)</td>
              <td>void CodeTypeReference..ctor (Type)</td>
              <td>We should parse basetype from right to left in 2.0 profile.</td>
              </tr>
              <tr>
              <td>void BuildBeginMethod (CodeTypeDeclaration, string, string, Type[], String[], Type, Type)</td>
              <td>void CodeTypeReference..ctor (Type)</td>
              <td>We should parse basetype from right to left in 2.0 profile.</td>
              </tr>
              <tr>
              <td>void BuildEndMethod (CodeTypeDeclaration, string, string, Type[], String[], Type, Type)</td>
              <td>void CodeTypeReference..ctor (Type)</td>
              <td>We should parse basetype from right to left in 2.0 profile.</td>
              </tr>
              <tr>
              <td>void BuildEndMethod (CodeTypeDeclaration, string, string, Type[], String[], Type, Type)</td>
              <td>void CodeTypeReference..ctor (Type)</td>
              <td>We should parse basetype from right to left in 2.0 profile.</td>
              </tr>
              <tr>
              <td>void MakeParameterList (CodeMemberMethod, Type[], String[])</td>
              <td>void CodeTypeReference..ctor (Type)</td>
              <td>We should parse basetype from right to left in 2.0 profile.</td>
              </tr>
              <tr>
              <td>void MakeReturnVariable (CodeMemberMethod, Type)</td>
              <td>void CodeTypeReference..ctor (Type)</td>
              <td>We should parse basetype from right to left in 2.0 profile.</td>
              </tr>
              <tr>
              <td>void MakeTempVariable (CodeMemberMethod, Type)</td>
              <td>void CodeTypeReference..ctor (Type)</td>
              <td>We should parse basetype from right to left in 2.0 profile.</td>
              </tr>
              <tr>
              <td>void MakeTempParameterArray (CodeMemberMethod, Type[], String[])</td>
              <td>void CodeTypeReference..ctor (Type)</td>
              <td>We should parse basetype from right to left in 2.0 profile.</td>
              </tr>
            </table>
          </td>
        </tr>
        <tr>
          <td style='width: 10px'></td>
          <td style='width: 16px'><img src='Media/pass.png' /></td>
          <td>Should.Fluent.dll</td>
          <td>1.0.0.0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <td style='width: 10px'></td>
          <td style='width: 16px'><img src='Media/pass.png' /></td>
          <td>Wordpress.Xml.Rpc.dll</td>
          <td>1.0.0.0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <td style='width: 10px'></td>
          <td style='width: 16px'><img src='Media/pass.png' /></td>
          <td>Wordpress.Xml.Rpc.Tests.dll</td>
          <td>1.0.0.0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
      </tbody>
      <tfoot>
        <tr class='tabletotal'>
          <td></td>
          <td></td>
          <td>Totals</td>
          <td></td>
          <td>0</td>
          <td>0</td>
          <td>15</td>
          <td>0</td>
        </tr>
      </tfoot>
    </table>
</div>
</body>
</html>
